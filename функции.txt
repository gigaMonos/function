Функции обьявляются двумя способами либо же обьявлять их либо же строить функционпльоне выражение
Имя функции и ее предназначене 
как правило называют функции с использованием определенных префиксов оюозначающих действие , а после нихследует обьект действия
Примеры:
"show" - обычно что то показывают
"get" возвращают значение
"calc" вычисляют
"create" что то создают
"check" проверка и возврат логического значени
Функцию можно вызывать несколько раз и это обьясняет ее основную задачу - избавляения от дублирования кода
нельзя вызывать дочерную функцию за пределами родительского блока
переменные с одинаковым именнем обьявленные внутри блока и за его  границами не будут взаимодействоват друг с другом
Глобальная переменная это перерменная обьявленна вне блоков с присвенныем значение и вызвана внутри блока будет распространять сове значение везде
Параметры 
Вызывая функцию можно задать в скобках параметры, которые будут присваиваться переменным
 по очереди
Параметры переданные в вызове функции будут приоритетными и поменяют значения переменных
Рекурсия это функция которая вызывает сама себя
ФУНКЦИОНАЛЬНОЕ ВЫРАЖЕНИЕ 
разница с fucntion declarative только в том, что сначала мы обьявляем переменную и присваиваем ей функцию 
Плюс функцинального выражения в том, что когда функция находится внутри какого то блока, она не видна за его пределами,
Благодаря функцилнальному выражению мы можем присвоить переменной функию и исользовать ее в любом месте
Также переменная с присвонной 
функцией может вызыться с помощью переменной и круглой
скобкой function getSumm(){
    let summ = 1 + 2;
    console.log(summ);
};
let someVar = getSumm;
someVar();- функция вызвана именем переменной потому, ей была присвоена функция
getSumm();  
Однострочная и многострочная стрелочная функция отличается наличием фигурных скобок и дерективой и ретерн
Планирование setTimeout i setInterval
В Java Script есть потребность реализовать вызов Функции не сразу для того создали планирование, которое работает следующими методами:
setTimeout - позволяет вызвать функцию ОДИН раз через опредедленный интервал времени 
setTimeout(функция или код, задержка, параметр,...параметр)
setInterval - позволяет вызывть функцию регулярно через определенный интервал временни 
setInterval(функция или код, задержка, параметр,...параметр)
setInterval не является благонадежнойгарантией того, что задержка будет выполняться вовремя для этого нам на помощь приходит РЕКУРСИЯ 
setTimeoout - можно присвоить переменную
clearTimeout когда нам нужно остановить сет таймают для этого намужно присвоить переменной сэт тайм аут b и при опредедленном условии остановить с помощью клер тайм аут 
